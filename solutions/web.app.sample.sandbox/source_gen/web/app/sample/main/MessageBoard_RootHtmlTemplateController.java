package web.app.sample.main;

/*Generated by MPS */

import jetbrains.mps.webr.runtime.templateComponent.RootTemplateController;
import jetbrains.mps.webr.runtime.templateComponent.ActionController;
import jetbrains.mps.webr.runtime.templateComponent.IdParameter;
import jetbrains.mps.webr.runtime.templateComponent.TemplateActionController;
import jetbrains.mps.webr.runtime.templateComponent.ActionFactory;
import jetbrains.mps.webr.runtime.templateComponent.TemplateComponent;
import webr.framework.textBuilder.TBuilderContext;
import java.util.Map;
import jetbrains.mps.internal.collections.runtime.MapSequence;
import java.util.HashMap;
import jetbrains.mps.webr.runtime.templateComponent.LayoutComponent;

public class MessageBoard_RootHtmlTemplateController extends RootTemplateController {
  public MessageBoard_RootHtmlTemplateController() {
    super("MessageBoard");
  }

  public ActionController createAction(String idParameterValue, String windowId) {
    IdParameter idParameter = null;
    return new MessageBoard_RootHtmlTemplateController.Action(windowId, this, idParameter, true);
  }

  private static class Action extends TemplateActionController {
    public Action(String windowId, ActionFactory actionFactory, IdParameter idParameter, boolean transactional) {
      super("MessageBoard", windowId, actionFactory, transactional);
      this.setIdParameter(idParameter);
    }

    public TemplateComponent createTemplateComponent(TBuilderContext builderContext) {
      String rootTemplateName = "MessageBoard";
      rootTemplateName = StringUtils.substring(rootTemplateName, 0, 1).toUpperCase();
      builderContext.setCurrentTemplateName(rootTemplateName);
      //  start layout
      Map<String, Object> templateParameters = MapSequence.fromMap(new HashMap<String, Object>());
      LayoutComponent layoutComponent = new Main_LayoutComponent(this, templateParameters);
      layoutComponent.setRefName(layoutComponent.getTemplateName());
      builderContext.setCurrentLayoutName("Main");
      //  end layout
      TemplateComponent templateComponent = new MessageBoard_RootHtmlTemplateComponent(this, layoutComponent, rootTemplateName, null);
      layoutComponent.setNestedTemplateComponent(templateComponent);
      templateComponent.setRefName(rootTemplateName);
      builderContext.pushCurrentTemplateComponent(templateComponent);
      templateComponent.fillTemplateParameters(templateParameters, builderContext);
      builderContext.popCurrentTemplateComponent();
      return layoutComponent;
    }
  }
}
